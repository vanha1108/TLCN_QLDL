{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\TT\\\\Desktop\\\\TLCN\\\\TLCN_QLDL\\\\FRONTEND\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\TT\\\\Desktop\\\\TLCN\\\\TLCN_QLDL\\\\FRONTEND\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\TT\\\\Desktop\\\\TLCN\\\\TLCN_QLDL\\\\FRONTEND\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\TT\\\\Desktop\\\\TLCN\\\\TLCN_QLDL\\\\FRONTEND\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\TT\\\\Desktop\\\\TLCN\\\\TLCN_QLDL\\\\FRONTEND\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\TT\\\\Desktop\\\\TLCN\\\\TLCN_QLDL\\\\FRONTEND\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\";\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // reactstrap components\n\nimport { Nav } from \"reactstrap\";\nvar ps;\n\nvar Sidebar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  var _super = _createSuper(Sidebar);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _super.call(this, props);\n\n    _this.linkOnClick = function () {\n      document.documentElement.classList.remove(\"nav-open\");\n    };\n\n    _this.activeRoute.bind(_assertThisInitialized(_this));\n\n    return _this;\n  } // verifies if routeName is the one active (in browser input)\n\n\n  _createClass(Sidebar, [{\n    key: \"activeRoute\",\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          routes = _this$props.routes,\n          rtlActive = _this$props.rtlActive,\n          logo = _this$props.logo;\n      var logoImg = null;\n      var logoText = null;\n\n      if (logo !== undefined) {\n        if (logo.outterLink !== undefined) {\n          logoImg = /*#__PURE__*/React.createElement(\"a\", {\n            style: {\n              color: 'Black'\n            },\n            href: logo.outterLink,\n            className: \"simple-text logo-mini\",\n            target: \"_blank\",\n            onClick: this.props.toggleSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"logo-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }\n          })));\n          logoText = /*#__PURE__*/React.createElement(\"a\", {\n            style: {\n              color: 'Black'\n            },\n            href: logo.outterLink,\n            className: \"simple-text logo-normal\",\n            target: \"_blank\",\n            onClick: this.props.toggleSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }\n          }, logo.text);\n        } else {\n          logoImg = /*#__PURE__*/React.createElement(Link, {\n            to: logo.innerLink,\n            className: \"simple-text logo-mini\",\n            onClick: this.props.toggleSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"logo-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }\n          })));\n          logoText = /*#__PURE__*/React.createElement(Link, {\n            to: logo.innerLink,\n            className: \"simple-text logo-normal\",\n            onClick: this.props.toggleSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }\n          }, logo.text);\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar\",\n        data: bgColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar-wrapper\",\n        ref: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, logoImg !== null || logoText !== null ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, logoImg, logoText) : null, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, routes.map(function (prop, key) {\n        if (prop.redirect) return null;\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: _this2.activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\"),\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: prop.layout + prop.path,\n          className: \"nav-link\",\n          activeClassName: \"active\",\n          onClick: _this2.props.toggleSidebar,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: prop.icon,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, rtlActive ? prop.rtlName : prop.name)));\n      }))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/TT/Desktop/TLCN/TLCN_QLDL/FRONTEND/src/components/Sidebar/Sidebar.js"],"names":["React","NavLink","Link","PropTypes","PerfectScrollbar","Nav","ps","Sidebar","props","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","color","toggleSidebar","imgSrc","text","innerLink","map","prop","key","redirect","path","pro","layout","icon","rtlName","name","Component","defaultProps","propTypes","bool","oneOf","arrayOf","object","shape","string","node"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav } from \"reactstrap\";\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  linkOnClick = () => {\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n  };\r\n  render() {\r\n    const { bgColor, routes, rtlActive, logo } = this.props;\r\n    let logoImg = null;\r\n    let logoText = null;\r\n    if (logo !== undefined) {\r\n      if (logo.outterLink !== undefined) {\r\n        logoImg = (\r\n          <a\r\n            style={{color: 'Black'}}\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n        );\r\n        logoText = (\r\n          <a\r\n            style={{color: 'Black'}}\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-normal\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </a>\r\n        );\r\n      } else {\r\n        logoImg = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-mini\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </Link>\r\n        );\r\n        logoText = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-normal\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"sidebar\" data={bgColor}>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          {logoImg !== null || logoText !== null ? (\r\n            <div className=\"logo\">\r\n              {logoImg}\r\n              {logoText}\r\n            </div>\r\n          ) : null}\r\n          <Nav>\r\n            {routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.path) +\r\n                    (prop.pro ? \" active-pro\" : \"\")\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    onClick={this.props.toggleSidebar}\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  bgColor: \"primary\",\r\n  routes: [{}]\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string\r\n  })\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}